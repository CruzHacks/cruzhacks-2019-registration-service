# Notes:
#  - 'volumes' are not respected by Heroku.
#  - Exposed ports are not respected by Heroku either.  Apps must get $PORT instead.

version: '3'
services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Forward port 80 on the client to 80 on the container.
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - registration

  registration:
    build: ./services/registration
    volumes:
      - ./services/registration:/usr/src/app/registration:ro  # Copy local source code as read only.
      - ./wait-for-postgres.sh:/usr/bin/wait-for-postgres
    working_dir: /usr/src/app/registration
    environment:  # Config settings to load AFTER the entry point of the container.
      - PYTHONPATH="$PYTHONPATH:/usr/src/app:/usr/local/lib:/usr/local/bin"
      - DEPLOYMENT_MODE="prod"
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:tmp@postgres/cruzhacks_db?port=5432
      - POSTGRES_PASSWORD=tmp
    expose:
      - "8000"
    entrypoint: wait-for-postgres gunicorn registration.wsgi --config=./gunicorn.py
    depends_on:
      - postgres

  postgres:
    image: postgres:10-alpine
    volumes:
      # Allows persistent data by syncing the local dir with the container's dir.
      # Heroku doesn't support 'volumes' tag so we need to figure something out.
      - ./postgres/data:/var/lib/postgresql/data  # /var/lib/postgresql/data is the default for PGDATA variable.
    environment:
      - POSTGRES_PASSWORD=tmp
      - POSTGRES_DB=cruzhacks_db
